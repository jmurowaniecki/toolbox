#!/bin/bash
#
# by John Murowaniecki
#
# TODO:
#   - colors;
#   - manage empty passwords;
#   - list projects and users;
#

STD_FOLDER='/var/www/preview/'
STD_PASSWORD='access4guest!'
STD_GROUP='clients'

project=${2}
username=${3:-"${project}"}
password=${4:-"${STD_PASSWORD}"}
directory="${STD_FOLDER}${project}"

attention=`tput setaf 3`
normalize=`tput sgr0`

declare -A lang
lang[welcome_text]="\nWelcome to ${attention}${0}${normalize}, for further informations go to ${attention}http://github.com/jmurowaniecki/toolbox${normalize}"
lang[welcome_text_htaccess]="Project ${project}"
lang[basic_help]="${0} is a linux Toolbox for services and client managment.\n\nTry to execute ${attention}\`${0} new project_name [user_name] [passwor]\`${normalize}."
lang[not_sudo]="Permission denied."

function proc_new {
    encrypted_password=`openssl passwd -1 ${password}`
    useradd -m -s /bin/false -p "${encrypted_password}" "${username}" -d "${directory}"
    adduser "${username}" "${STD_GROUP}"
    #smbpasswd -a "${username}" -w "${password}"
    htpasswd -bcmd "${directory}/.htpasswd" "${username}" "${password}"
    echo "# automatically generated by toolbox - http://github.com/jmurowaniecki/toolbox
AuthName \"${lang[welcome_text_htaccess]}\"
AuthType Basic
AuthUserFile ${directory}/.htpasswd
require valid-user" > "${directory}/.htaccess"
}

if [ `whoami` == 'root' ]
then
    echo -e ${lang[welcome_text]}
    if [ ${#} -gt 0 ]
    then
        case ${1} in
            new|mod|del|list)
                proc_${1} ${2} ${3} ${4} ${5}
                ;;
        esac
    else
        echo -e ${lang[basic_help]}
    fi
else
    sudo ${0} $* && exit 0
    echo "${lang[not_sudo]}"
fi
